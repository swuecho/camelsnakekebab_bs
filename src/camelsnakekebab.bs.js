// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function uppercase(prim) {
  return prim.toUpperCase();
}

function lowercase(prim) {
  return prim.toLowerCase();
}

function index(prim, prim$1) {
  return prim[prim$1];
}

function capitalize(str) {
  return str.charAt(0).toUpperCase().concat(str.slice(1));
}

function capitalize_http_header(s) {
  var uppercase_s = s.toUpperCase();
  var uppercase_http_headers = /* array */[
    "CSP",
    "ATT",
    "WAP",
    "IP",
    "HTTP",
    "CPU",
    "DNT",
    "SSL",
    "UA",
    "TE",
    "WWW",
    "XSS",
    "MD5"
  ];
  var match = uppercase_http_headers.includes(uppercase_s);
  if (match) {
    return uppercase_s;
  } else {
    return capitalize(s);
  }
}

var word_sep = (/\s+|_|-|(?<=[A-Z])(?=[A-Z][a-z])|(?<=[^A-Z_-])(?=[A-Z])|(?<=[A-Za-z0-9])(?=[^A-Za-z0-9])/);

function split_words(str) {
  return str.split(word_sep);
}

function convert_case(convert_first, convert_rest, sep, str) {
  var words = str.split(word_sep);
  var match = words.length;
  if (match !== 0) {
    if (match !== 1) {
      var first_word = Curry._1(convert_first, words[0]);
      var rest_words = words.slice(1).map(Curry.__1(convert_rest));
      return /* array */[first_word].concat(rest_words).join(sep);
    } else {
      return words[0];
    }
  } else {
    return "";
  }
}

function lower_camel_case(str) {
  return convert_case(lowercase, capitalize, "", str);
}

function upper_camel_case(str) {
  return convert_case(capitalize, capitalize, "", str);
}

function lower_snake_case(str) {
  return convert_case(lowercase, lowercase, "_", str);
}

function upper_snake_case(str) {
  return convert_case(capitalize, capitalize, "_", str);
}

function constant_case(str) {
  return convert_case(uppercase, uppercase, "_", str);
}

function kebab_case(str) {
  return convert_case(lowercase, lowercase, "-", str);
}

function http_header_case(str) {
  return convert_case(capitalize_http_header, capitalize_http_header, "-", str);
}

exports.uppercase = uppercase;
exports.lowercase = lowercase;
exports.index = index;
exports.capitalize = capitalize;
exports.capitalize_http_header = capitalize_http_header;
exports.word_sep = word_sep;
exports.split_words = split_words;
exports.convert_case = convert_case;
exports.lower_camel_case = lower_camel_case;
exports.upper_camel_case = upper_camel_case;
exports.lower_snake_case = lower_snake_case;
exports.upper_snake_case = upper_snake_case;
exports.constant_case = constant_case;
exports.kebab_case = kebab_case;
exports.http_header_case = http_header_case;
/* word_sep Not a pure module */
